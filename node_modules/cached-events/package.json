{
  "name": "cached-events",
  "version": "0.0.1",
  "description": "Cache an Event Emitter",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/cached-events.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/cached-events",
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/cached-events/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/cached-events/raw/master/LICENSE"
    }
  ],
  "scripts": {},
  "readme": "# cached-events\n\nCache an Event Emitter\n\n## Example\n\nStores the emitted event for an event in a cache and will immediately fire an attached event listeners if that event is in the cache.\n\nGood for things where you want to be notified when something happens but don't want to worry about binding listeners before it happens\n\n``` js\nvar CachedEmitter = require(\"../index\")\n\nvar login = CachedEmitter()\n\nlogin.emit(\"login\", \"steve\", \"jones\")\n\nlogin.on(\"login\", function (user, pass) {\n    console.log(user, pass)\n})\n\n```\n\n## Installation\n\n`npm install cached-events`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced",
  "_id": "cached-events@0.0.1",
  "_from": "cached-events"
}
